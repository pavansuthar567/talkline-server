version: "3.8"

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - NODE_ENV=production
      - PORT=8000
      - MONGODB_URI=mongodb://mongo:27017/talkline
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    depends_on:
      - mongo
      - redis
      - kafka
    networks:
      - talkline-network
    restart: unless-stopped

  socket-server:
    build: .
    command: ["node", "dist/socket-server/index.js"]
    ports:
      - "8001:8001"
    environment:
      - NODE_ENV=production
      - PORT=8001
      - REDIS_URL=redis://redis:6379
      - KAFKA_BROKERS=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
    depends_on:
      - redis
      - kafka
    networks:
      - talkline-network
    restart: unless-stopped

  mongo:
    image: mongo:6.0
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=talkline
    volumes:
      - mongo-data:/data/db
    networks:
      - talkline-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - talkline-network
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - talkline-network
    restart: unless-stopped

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - talkline-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
      - socket-server
    networks:
      - talkline-network
    restart: unless-stopped

volumes:
  mongo-data:
  redis-data:

networks:
  talkline-network:
    driver: bridge
